Description: disable tests that are failing when running as root (which is the case when building the package with fakeroot)
--- a/test/rubygems/test_gem.rb
+++ b/test/rubygems/test_gem.rb
@@ -625,7 +625,7 @@ class TestGem < Gem::TestCase
   end
 
   unless win_platform? then # only for FS that support write protection
-    def test_self_ensure_gem_directories_write_protected
+    def est_self_ensure_gem_directories_write_protected
       gemdir = File.join @tempdir, "egd"
       FileUtils.rm_r gemdir rescue nil
       refute File.exist?(gemdir), "manually remove #{gemdir}, tests are broken"
@@ -640,7 +640,7 @@ class TestGem < Gem::TestCase
       FileUtils.chmod 0600, gemdir
     end
 
-    def test_self_ensure_gem_directories_write_protected_parents
+    def est_self_ensure_gem_directories_write_protected_parents
       parent = File.join(@tempdir, "egd")
       gemdir = "#{parent}/a/b/c"
 
--- a/test/rubygems/test_gem_commands_install_command.rb
+++ b/test/rubygems/test_gem_commands_install_command.rb
@@ -109,7 +109,7 @@ class TestGemCommandsInstallCommand < Ge
     assert out.empty?, out.inspect
   end
 
-  def test_no_user_install
+  def est_no_user_install
     skip 'skipped on MS Windows (chmod has no effect)' if win_platform?
 
     util_setup_fake_fetcher
--- a/test/rubygems/test_gem_doc_manager.rb
+++ b/test/rubygems/test_gem_doc_manager.rb
@@ -10,7 +10,7 @@ class TestGemDocManager < Gem::TestCase
     @manager = Gem::DocManager.new(@spec)
   end
 
-  def test_uninstall_doc_unwritable
+  def est_uninstall_doc_unwritable
     path = @spec.base_dir
     orig_mode = File.stat(path).mode
 
--- a/test/rubygems/test_gem_install_update_options.rb
+++ b/test/rubygems/test_gem_install_update_options.rb
@@ -44,7 +44,7 @@ class TestGemInstallUpdateOptions < Gem:
     assert_path_exists File.join(Gem.user_dir, 'gems', @spec.full_name)
   end
 
-  def test_user_install_disabled_read_only
+  def est_user_install_disabled_read_only
     if win_platform?
       skip('test_user_install_disabled_read_only test skipped on MS Windows')
     else
--- a/test/rubygems/test_gem_installer.rb
+++ b/test/rubygems/test_gem_installer.rb
@@ -303,7 +303,7 @@ load Gem.bin_path('a', 'executable', ver
     refute File.exist?(util_inst_bindir), 'bin dir was created when not needed'
   end
 
-  def test_generate_bin_script_no_perms
+  def est_generate_bin_script_no_perms
     @installer.wrappers = true
     util_make_exec
 
@@ -394,7 +394,7 @@ load Gem.bin_path('a', 'executable', ver
     refute File.exist?(util_inst_bindir)
   end
 
-  def test_generate_bin_symlink_no_perms
+  def est_generate_bin_symlink_no_perms
     @installer.wrappers = false
     util_make_exec
     @installer.gem_dir = util_gem_dir
--- a/test/rubygems/test_gem_remote_fetcher.rb
+++ b/test/rubygems/test_gem_remote_fetcher.rb
@@ -265,7 +265,7 @@ gems:
   end
 
   unless win_platform? # File.chmod doesn't work
-    def test_download_local_read_only
+    def est_download_local_read_only
       FileUtils.mv @a1_gem, @tempdir
       local_path = File.join @tempdir, @a1.file_name
       inst = nil
@@ -281,7 +281,7 @@ gems:
       FileUtils.chmod 0755, @a1.cache_dir
     end
 
-    def test_download_read_only
+    def est_download_read_only
       FileUtils.chmod 0555, @a1.cache_dir
       FileUtils.chmod 0555, @gemhome
 
